{"version":3,"file":"static/js/342.a4851fa3.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","redux/selectors.js","components/ContactForm/ContactForm.jsx","components/ContactListCard/ContactListCard.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import { styled } from 'styled-components';\nimport { Form } from 'formik';\n\nexport const CardForm = styled(Form)`\n  width: 200px;\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  margin-top: 10px;\n  padding-left: 5px;\n  border: 1px solid;\n`;\n\nexport const Button = styled.button`\n  width: 100px;\n  margin-top: 10px;\n  margin-left: auto;\n  margin-bottom: 20px;\n  margin-right: auto;\n`;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/operations';\nimport { Formik, Field } from 'formik';\nimport { CardForm, Button } from './ContactForm.styled';\nimport { selectContacts } from 'redux/selectors';\n\nexport const ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = newContact => {\n    if (contacts.find(contact => contact.name === newContact.name)) {\n      alert(`${newContact.name} is already in contacts.`);\n      return;\n    }\n\n    dispatch(addContact({ ...newContact }));\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        number: '',\n      }}\n      onSubmit={(values, actions) => {\n        handleSubmit(values);\n        actions.resetForm();\n      }}\n    >\n      <CardForm>\n        <label>\n          Name\n          <Field\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[а-яА-ЯёЁa-zA-Z\\s]+$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </label>\n\n        <label>\n          Number\n          <Field\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </label>\n\n        <Button type=\"submit\">Add contact</Button>\n      </CardForm>\n    </Formik>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport { deleteContact, updateContact } from 'redux/operations';\n\nexport const ContactListCard = ({ item: { id, name, number } }) => {\n  const dispatch = useDispatch();\n\n  const handleEdit = () => {\n    dispatch(updateContact({ id, name, number }));\n  };\n\n  const handleDelete = () => {\n    dispatch(deleteContact(id));\n  };\n\n  return (\n    <>\n      {name}: {number}\n      <button onClick={handleEdit}>Edit</button>\n      <button onClick={handleDelete}>Delete</button>\n    </>\n  );\n};\n","import { styled } from 'styled-components';\n\nexport const List = styled.ul`\n  flex-direction: column;\n  margin: 0 auto;\n  display: flex;\n  justify-content: center;\n  gap: 15px;\n  margin-top: 20px;\n  margin-bottom: 20px;\n`;\n","import { useSelector } from 'react-redux';\nimport { ContactListCard } from 'components/ContactListCard/ContactListCard.jsx';\nimport { List } from './ContactList.styled';\nimport { selectFilteredContacts } from 'redux/selectors';\n\nexport const ContactList = () => {\n  const filteredContacts = useSelector(selectFilteredContacts);\n\n  return (\n    <List>\n      {filteredContacts.map(item => (\n        <li key={item.id}>\n          <ContactListCard item={item} />\n        </li>\n      ))}\n    </List>\n  );\n};\n","import { styled } from 'styled-components';\n\nexport const FilterLabel = styled.label`\n  width: 200px;\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  margin-top: 10px;\n`;\n","import { useDispatch } from 'react-redux';\nimport { filterContacts } from 'redux/filterSlice';\nimport { FilterLabel } from './Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleFilterChange = e => {\n    dispatch(filterContacts(e.currentTarget.value));\n  };\n\n  return (\n    <FilterLabel>\n      Find contacts by name\n      <input onChange={handleFilterChange} name=\"filter\" />\n    </FilterLabel>\n  );\n};\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ContactForm } from 'components/ContactForm/ContactForm.jsx';\nimport { ContactList } from 'components/ContactList/ContactList.jsx';\nimport { Filter } from 'components/Filter/Filter.jsx';\nimport { selectIsLoading, selectError } from 'redux/selectors.js';\nimport { fetchContacts } from 'redux/operations.js';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      {isLoading && !error && <b>Request in progress...</b>}\n      <ContactList />\n    </div>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["CardForm","styled","Form","_templateObject","_taggedTemplateLiteral","Button","_templateObject2","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilteredContacts","createSelector","filter","_ref","name","toLowerCase","includes","ContactForm","useSelector","dispatch","useDispatch","_jsx","Formik","initialValues","number","onSubmit","values","actions","newContact","find","contact","alert","concat","addContact","_objectSpread","resetForm","children","_jsxs","Field","type","pattern","title","required","ContactListCard","_ref$item","item","id","_Fragment","onClick","updateContact","deleteContact","List","ContactList","filteredContacts","map","FilterLabel","Filter","onChange","e","filterContacts","currentTarget","value","useEffect","fetchContacts"],"sourceRoot":""}